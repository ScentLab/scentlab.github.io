import './BlackTooltip.svelte.css';
/* src/components/Commons/BlackTooltip.svelte generated by Svelte v3.32.3 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from "../../../_snowpack/pkg/svelte/internal.js";

function create_fragment(ctx) {
	let div1;
	let t0;
	let t1;
	let t2;
	let t3;
	let t4;
	let t5;
	let t6;
	let t7;
	let t8;
	let div0;

	return {
		c() {
			div1 = element("div");
			t0 = text("title: #");
			t1 = text(/*title*/ ctx[0]);
			t2 = text(", descHead: #");
			t3 = text(/*descHead*/ ctx[1]);
			t4 = text(",  descBody: #");
			t5 = text(/*descBody*/ ctx[2]);
			t6 = text(",  pos: #");
			t7 = text(/*pos*/ ctx[3]);
			t8 = space();
			div0 = element("div");
			attr(div0, "id", "arrow");
			attr(div0, "data-popper-arrow", "");
			attr(div0, "class", "svelte-s3tmko");
			attr(div1, "id", "tooltip");
			attr(div1, "role", "tooltip");
			attr(div1, "class", "svelte-s3tmko");
		},
		m(target, anchor) {
			insert(target, div1, anchor);
			append(div1, t0);
			append(div1, t1);
			append(div1, t2);
			append(div1, t3);
			append(div1, t4);
			append(div1, t5);
			append(div1, t6);
			append(div1, t7);
			append(div1, t8);
			append(div1, div0);
		},
		p(ctx, [dirty]) {
			if (dirty & /*title*/ 1) set_data(t1, /*title*/ ctx[0]);
			if (dirty & /*descHead*/ 2) set_data(t3, /*descHead*/ ctx[1]);
			if (dirty & /*descBody*/ 4) set_data(t5, /*descBody*/ ctx[2]);
			if (dirty & /*pos*/ 8) set_data(t7, /*pos*/ ctx[3]);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div1);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { title } = $$props,
		{ descHead } = $$props,
		{ descBody } = $$props,
		{ pos } = $$props;

	$$self.$$set = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
		if ("descHead" in $$props) $$invalidate(1, descHead = $$props.descHead);
		if ("descBody" in $$props) $$invalidate(2, descBody = $$props.descBody);
		if ("pos" in $$props) $$invalidate(3, pos = $$props.pos);
	};

	return [title, descHead, descBody, pos];
}

class BlackTooltip extends SvelteComponent {
	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			title: 0,
			descHead: 1,
			descBody: 2,
			pos: 3
		});
	}
}

export default BlackTooltip;